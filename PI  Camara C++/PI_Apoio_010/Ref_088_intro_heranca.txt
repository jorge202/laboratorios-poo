#include <stdio.h>
#include <iostream>
#include <stdlib.h>

using namespace std;

// Programa Ref_088_intro_heranca

// Herança de classes
// A herança é a característica que as linguagens de programação 
// orientadas por objectos apresentam, a qual lhes permite derivar 
// novas classes de classes já existentes.

// Tal como uma bola de futebol é um tipo de bola, uma pessoa 
// é um tipo de mamífero e uma laranja é um tipo de fruto, etc.
// Assim podemos derivar uma classe de outra à qual chamamos 
// superclasse.

// Ao declararmos uma classe podemos derivá-la, colocando a seguir 
// ao nome da classe o sinal de dois pontos, seguido pelo identificador 
// do tipo de derivação e do nome da superclasse, como no exemplo abaixo:
//

// Define a classe base para veiculos com rodas

class veiculo_rodas
{
	int rodas;		// private por defeito
	int passageiros;	// private por defeito

public:
	void set_rodas(int num)
	{
		rodas = num;
	}

	int get_rodas() 
	{
		return rodas;
	}
	
	void set_pass(int num) 
	{
		passageiros = num;
	}

	int get_pass() 
	{
		return passageiros;
	}
};


// Define uma classe derivada/herdada, chamada 
// truck, a partir da classe veiculo_rodas

class truck : public veiculo_rodas
{
	int cargo; // private

public:
	
	void set_cargo(int size)
	{
		cargo = size;
	}

	int get_cargo()
	{
		return cargo;
	}

	void mostra(); // protótipo
};


// Cria um novo tipo de dados aqui chamado meu_tipo_car (o meu tipo de carro)

	enum meu_tipo_car{carro, van, wagon};


// Cria uma classe derivada automovel

class automovel : public veiculo_rodas
{
	enum meu_tipo_car tipo_carro; // tipo_carro é a variável do tipo meu_tipo_car
	
public:

	void set_tipo(meu_tipo_car  t)
	{
		tipo_carro = t;
	}

	enum meu_tipo_car get_tipo() 
	{
		return tipo_carro;
	}

	void mostra();
};

void truck::mostra()
{
	cout << "Rodas: " << get_rodas() << endl;

	cout << "Passageiros: " << get_pass() << endl;

	cout << "Capacidade cargo em litros: " << cargo << endl;
}

void automovel::mostra()
{
	cout << "Rodas: " << get_rodas() << endl;
	cout << "Passageiros: " << get_pass() << endl;
	cout << "Tipo: ";
	switch(get_tipo())
	{
		case van: cout << "Carrinha van " << endl;
			break;
		case carro: cout << "Carro de passageiros " << endl;
			break;
		case wagon: cout << "Furgao " << endl;
			break;
	}
}

int main()
{
	truck t1,t2;
	automovel a;

	t1.set_rodas(18);	// acede método classe mae
	t1.set_pass(2);		// acede método classe mae
	t1.set_cargo(3200);	// acede um seu próprio método

	t2.set_rodas(6);	// acede método classe mae
	t2.set_pass(3);		// acede método classe mae
	t2.set_cargo(1200);	// acede um seu próprio método

	t1.mostra();
	cout << endl;

	t2.mostra();
	cout << endl;

	a.set_rodas(4);
	a.set_pass(6);
	a.set_tipo(van);
	a.mostra();
	
	system("pause");
	return 0;
}
